@model List<EstateAgentPanelResultChartViewModel>
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>
    <div class="container-fluid pt-4 px-0">
        <div class="row g-4">
            <div class="col-sm-12 col-xl-6">
                <div class="bg-light text-center rounded p-4">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <h6 class="mb-0">Şehir - İlan İstatistiği</h6>
                        <a href="">Show All</a>
                    </div>
                    <canvas id="myChart"></canvas>
                </div>
            </div>
            <div class="col-sm-12 col-xl-6">
                <div class="bg-light text-center rounded p-4">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <h6 class="mb-0">Şehir - İlan İstatistiği</h6>
                        <a href="">Show All</a>
                    </div>
                    <canvas id="myChart1"></canvas>
                </div>
            </div>
        </div>
    </div>
    @{
        var xValues = new List<string>();
        var yValues = new List<int>();

        foreach (var item in Model)
        {
            xValues.Add(item.city);
            yValues.Add(item.cityCount);
        }

        <script>
            const xValues = @Html.Raw(Json.Serialize(xValues));
            const yValues = @Html.Raw(Json.Serialize(yValues));
            const barColors = ["rgb(106, 212, 221)", "rgb(127, 199, 217)", "rgb(54, 84, 134)", "rgb(134, 182, 246)", "rgb(0, 141, 218)"];

            new Chart("myChart", {
                type: "bar",
                data: {
                    labels: xValues,
                    datasets:
                        [{
                            backgroundColor: barColors,
                            data: yValues
                        }]
                },
                options:
                {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    legend: { display: false },
                    title:
                    {
                        display: true,
                        text: "Şehir - İlan İstatistiği"
                    }
                }
            });
        </script>

        var xValues1 = new List<string>();
        var yValues1 = new List<int>();

        foreach (var item in Model)
        {
            xValues1.Add(item.city);
            yValues1.Add(item.cityCount);
        }
        <script>
            const xValues1 = @Html.Raw(Json.Serialize(xValues1));
            const yValues1 = @Html.Raw(Json.Serialize(yValues1));
            const barColors1 = ["rgb(106, 212, 221)", "rgb(127, 199, 217)", "rgb(54, 84, 134)", "rgb(134, 182, 246)", "rgb(0, 141, 218)"];

            new Chart("myChart1", {
                type: "bar",
                data: {
                    labels: xValues1,
                    datasets:
                        [{
                            backgroundColor: barColors,
                            data: yValues1
                        }]
                },
                options:
                {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    legend: { display: false },
                    title:
                    {
                        display: true,
                        text: "Şehir - İlan İstatistiği"
                    }
                }
            });
        </script>
    }
</body>
</html>
